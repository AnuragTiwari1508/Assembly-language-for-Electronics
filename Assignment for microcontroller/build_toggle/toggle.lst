
build_toggle/toggle.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000d0  00000144  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000144  2**2
                  CONTENTS, READONLY
  3 .avr.prop     00000009  00000000  00000000  00000180  2**0
                  CONTENTS, READONLY
  4 .debug_info   000004e6  00000000  00000000  00000189  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000004a3  00000000  00000000  0000066f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000001a  00000000  00000000  00000b12  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000196  00000000  00000000  00000b2c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 46 00 	call	0x8c	; 0x8c <main>
  64:	0c 94 66 00 	jmp	0xcc	; 0xcc <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
  6c:	0f c0       	rjmp	.+30     	; 0x8c <main>
	...

0000008c <main>:
  8c:	08 e0       	ldi	r16, 0x08	; 8
  8e:	00 93 5e 00 	sts	0x005E, r16	; 0x80005e <__TEXT_REGION_LENGTH__+0x7f805e>
  92:	0f e5       	ldi	r16, 0x5F	; 95
  94:	00 93 5d 00 	sts	0x005D, r16	; 0x80005d <__TEXT_REGION_LENGTH__+0x7f805d>
  98:	0f ef       	ldi	r16, 0xFF	; 255
  9a:	00 93 34 00 	sts	0x0034, r16	; 0x800034 <__TEXT_REGION_LENGTH__+0x7f8034>
  9e:	00 e0       	ldi	r16, 0x00	; 0
  a0:	00 93 35 00 	sts	0x0035, r16	; 0x800035 <__TEXT_REGION_LENGTH__+0x7f8035>

000000a4 <main_loop>:
  a4:	0a ea       	ldi	r16, 0xAA	; 170
  a6:	00 93 35 00 	sts	0x0035, r16	; 0x800035 <__TEXT_REGION_LENGTH__+0x7f8035>
  aa:	05 d0       	rcall	.+10     	; 0xb6 <delay_10ms>
  ac:	05 e5       	ldi	r16, 0x55	; 85
  ae:	00 93 35 00 	sts	0x0035, r16	; 0x800035 <__TEXT_REGION_LENGTH__+0x7f8035>
  b2:	01 d0       	rcall	.+2      	; 0xb6 <delay_10ms>
  b4:	f7 cf       	rjmp	.-18     	; 0xa4 <main_loop>

000000b6 <delay_10ms>:
  b6:	1f 93       	push	r17
  b8:	2f 93       	push	r18
  ba:	18 e7       	ldi	r17, 0x78	; 120

000000bc <outer_loop>:
  bc:	26 ea       	ldi	r18, 0xA6	; 166

000000be <inner_loop>:
  be:	2a 95       	dec	r18
  c0:	f1 f7       	brne	.-4      	; 0xbe <inner_loop>
  c2:	1a 95       	dec	r17
  c4:	d9 f7       	brne	.-10     	; 0xbc <outer_loop>
  c6:	2f 91       	pop	r18
  c8:	1f 91       	pop	r17
  ca:	08 95       	ret

000000cc <_exit>:
  cc:	f8 94       	cli

000000ce <__stop_program>:
  ce:	ff cf       	rjmp	.-2      	; 0xce <__stop_program>
