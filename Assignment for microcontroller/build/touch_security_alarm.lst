
build/touch_security_alarm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000e0  00000154  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000154  2**2
                  CONTENTS, READONLY
  3 .avr.prop     00000009  00000000  00000000  00000190  2**0
                  CONTENTS, READONLY
  4 .debug_info   000004e6  00000000  00000000  00000199  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000004a3  00000000  00000000  0000067f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000001a  00000000  00000000  00000b22  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000196  00000000  00000000  00000b3c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 38 00 	call	0x70	; 0x70 <main>
  64:	0c 94 6e 00 	jmp	0xdc	; 0xdc <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
  6c:	01 c0       	rjmp	.+2      	; 0x70 <main>
  6e:	17 c0       	rjmp	.+46     	; 0x9e <ext_int0>

00000070 <main>:
  70:	08 e0       	ldi	r16, 0x08	; 8
  72:	00 93 5e 00 	sts	0x005E, r16	; 0x80005e <__TEXT_REGION_LENGTH__+0x7f805e>
  76:	0f e5       	ldi	r16, 0x5F	; 95
  78:	00 93 5d 00 	sts	0x005D, r16	; 0x80005d <__TEXT_REGION_LENGTH__+0x7f805d>
  7c:	03 e0       	ldi	r16, 0x03	; 3
  7e:	00 93 37 00 	sts	0x0037, r16	; 0x800037 <__TEXT_REGION_LENGTH__+0x7f8037>
  82:	00 e0       	ldi	r16, 0x00	; 0
  84:	00 93 31 00 	sts	0x0031, r16	; 0x800031 <__TEXT_REGION_LENGTH__+0x7f8031>
  88:	04 e0       	ldi	r16, 0x04	; 4
  8a:	00 93 32 00 	sts	0x0032, r16	; 0x800032 <__TEXT_REGION_LENGTH__+0x7f8032>
  8e:	03 e0       	ldi	r16, 0x03	; 3
  90:	00 93 55 00 	sts	0x0055, r16	; 0x800055 <__TEXT_REGION_LENGTH__+0x7f8055>
  94:	00 e4       	ldi	r16, 0x40	; 64
  96:	00 93 5b 00 	sts	0x005B, r16	; 0x80005b <__TEXT_REGION_LENGTH__+0x7f805b>
  9a:	78 94       	sei

0000009c <main_loop>:
  9c:	ff cf       	rjmp	.-2      	; 0x9c <main_loop>

0000009e <ext_int0>:
  9e:	01 e0       	ldi	r16, 0x01	; 1
  a0:	00 93 38 00 	sts	0x0038, r16	; 0x800038 <__TEXT_REGION_LENGTH__+0x7f8038>
  a4:	01 d0       	rcall	.+2      	; 0xa8 <alarm_sound>
  a6:	18 95       	reti

000000a8 <alarm_sound>:
  a8:	0f 93       	push	r16
  aa:	05 e0       	ldi	r16, 0x05	; 5

000000ac <beep_loop>:
  ac:	13 e0       	ldi	r17, 0x03	; 3
  ae:	10 93 38 00 	sts	0x0038, r17	; 0x800038 <__TEXT_REGION_LENGTH__+0x7f8038>
  b2:	08 d0       	rcall	.+16     	; 0xc4 <delay_routine>
  b4:	11 e0       	ldi	r17, 0x01	; 1
  b6:	10 93 38 00 	sts	0x0038, r17	; 0x800038 <__TEXT_REGION_LENGTH__+0x7f8038>
  ba:	04 d0       	rcall	.+8      	; 0xc4 <delay_routine>
  bc:	0a 95       	dec	r16
  be:	b1 f7       	brne	.-20     	; 0xac <beep_loop>
  c0:	0f 91       	pop	r16
  c2:	08 95       	ret

000000c4 <delay_routine>:
  c4:	2f 93       	push	r18
  c6:	3f 93       	push	r19
  c8:	28 ec       	ldi	r18, 0xC8	; 200

000000ca <outer_loop>:
  ca:	38 ec       	ldi	r19, 0xC8	; 200

000000cc <inner_loop>:
  cc:	00 00       	nop
  ce:	3a 95       	dec	r19
  d0:	e9 f7       	brne	.-6      	; 0xcc <inner_loop>
  d2:	2a 95       	dec	r18
  d4:	d1 f7       	brne	.-12     	; 0xca <outer_loop>
  d6:	3f 91       	pop	r19
  d8:	2f 91       	pop	r18
  da:	08 95       	ret

000000dc <_exit>:
  dc:	f8 94       	cli

000000de <__stop_program>:
  de:	ff cf       	rjmp	.-2      	; 0xde <__stop_program>
